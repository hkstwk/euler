package nl.hkolvoort.euler;

import java.util.ArrayList;
import java.util.Iterator;

/**
 * @author harm
 * @date 31-May-2015
 * 
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 	
 * 	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 	
 * 	Let us list the factors of the first seven triangle numbers:
 * 	
 * 	 1: 1
 * 	 3: 1,3
 * 	 6: 1,2,3,6
 * 	10: 1,2,5,10
 * 	15: 1,3,5,15
 * 	21: 1,3,7,21
 * 	28: 1,2,4,7,14,28
 * 	We can see that 28 is the first triangle number to have over five divisors.
 * 	
 * 	What is the value of the first triangle number to have over five hundred divisors?
 *
 */
public class P012_TriangularNumber {
	
	class Triangle {
		private Integer ordinal;
		private Integer triangle;
		private ArrayList<Integer> divisors;
		private Integer numberOfDivisors;
		
		public Triangle(Integer ord, Integer tri){
			ordinal = ord;
			triangle = tri;
			divisors = PrimeHelper.findFactors(triangle);
			setNumberofDivisors();
		}
		
		public Triangle(Integer ord){
			ordinal = ord;
			PrimeHelper.calculateTriangle(ordinal);
			divisors = PrimeHelper.findFactors(triangle);
			setNumberofDivisors();
		}
		
		private void setNumberofDivisors(){
			if (divisors != null){
				numberOfDivisors = divisors.size();
			}
			else{
				numberOfDivisors = 0;
			}
		}
	}
	
	private ArrayList<Triangle> triangles2;
	private ArrayList<Integer> triangles_old;
	private ArrayList<ArrayList<Integer>> divisors;
	
	public P012_TriangularNumber(){
		this.triangles_old = new ArrayList<Integer>();
		this.divisors = new ArrayList<ArrayList<Integer>>();
	}

	public ArrayList<Integer> getTriangularNumbers(Integer numberOfTriangles){
		for (int i = numberOfTriangles; i>=1;i--){
			Integer triangle = PrimeHelper.calculateTriangle(i);
			this.triangles_old.add(triangle);
			this.divisors.add(PrimeHelper.findFactors(triangle));
		}
		return this.triangles_old;
	}
	


	
	public String toString(){
		return "The triangle list contains: " + triangles_old.toString();
	}
	
	public void displayDivisors(){
		Iterator<ArrayList<Integer>> divisorIterator = this.divisors.listIterator();
		while (divisorIterator.hasNext()){
			ArrayList<Integer> divisors = divisorIterator.next();
			System.out.println(" Number of divisors: " + divisors.size() + " / "+ divisors.toString());
		}
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		P012_TriangularNumber p012 = new P012_TriangularNumber();
		p012.getTriangularNumbers(20);
		System.out.println(p012.toString());
		p012.displayDivisors();
	}

}
